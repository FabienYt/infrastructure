#jinja2: lstrip_blocks: "true"
---
{{ ansible_managed | comment }}
# Generated by Ansible role {{ ansible_role_name }}
version: "{{ docker_compose_version }}"

{% if docker_compose_networks|length > 0 %}
networks:
  {% for network in docker_compose_networks %}
  {{ network }}:
    {% if network == docker_compose_network_proxy_name %}
    external: true
    {% endif %}
  {% endfor %}
{% endif %}

{% macro format(reference, values, prefix="- ") -%}
    {{ reference }}:
      {% for value in values %}
      {{ prefix }}{{ value }}
      {% endfor %}
{%- endmacro %}

services:
  {% for container in docker_compose_containers %}
  {{ container.service_name }}:
    image: {{ container.image }}
    container_name: {{ container.container_name | default(container.service_name) }}
    restart: {{ container.restart | default("unless-stopped") }}
    {% if container.security_opt is defined %}
    {{ format('security_opt', container.security_opt) }}
    {%- endif %}
    {% if container.cap_add is defined %}
    {{ format('cap_add', container.cap_add) }}
    {%- endif %}
    {% if container.depends_on is defined %}
    depends_on:
      {% for depends_on in container.depends_on %}
      {{ depends_on.name }}:
        condition: {{ depends_on.condition|default("service_healthy") }}
      {% endfor %}
    {%- endif %}
    {% if container.dns is defined %}
    {{ format('dns', container.dns) }}
    {%- endif %}
    {% if container.devices is defined %}
    {{ format('devices', container.devices) }}
    {%- endif %}
    {% if container.environment is defined %}
    {{ format('environment', container.environment) }}
    {%- endif %}
    {% if container.group_add is defined %}
    {{ format('group_add', container.group_add) }}
    {%- endif %}
    {% if container.healthcheck is defined %}
    healthcheck:
      test: {{ container.healthcheck.test }}
      interval: {{ container.healthcheck.interval|default("15s") }}
      timeout: {{ container.healthcheck.timeout|default("10s") }}
      retries: {{ container.healthcheck.retries|default("3") }}
      start_period: {{ container.healthcheck.start_period|default("30s") }}
    {% endif %}
    {% if container.hostname is defined %}
    hostname: {{ container.hostname }}
    {% endif %}
    {% if container.labels is defined or container.labels_traefik is defined %}
    labels:
    {% if container.labels_traefik is defined %}
      - traefik.enable=true
      - traefik.http.routers.to-{{ container.labels_traefik.name }}.rule=Host(`{{ container.labels_traefik.subdomains | default(container.labels_traefik.name) }}.{{ domain_name }}`)
      - traefik.http.routers.to-{{ container.labels_traefik.name }}.entrypoints=websecure
      - traefik.http.routers.to-{{ container.labels_traefik.name }}.service={{ container.labels_traefik.name }}
      - traefik.http.services.{{ container.labels_traefik.name }}.loadbalancer.passhostheader=true
      - traefik.http.services.{{ container.labels_traefik.name }}.loadbalancer.server.port={{ container.labels_traefik.port }}
    {% endif %}
    {% if container.labels is defined %}
    {% for label in container.labels %}
      - {{ label }}
    {% endfor %}
    {% endif %}
    {% endif %}
    {% if container.networks is defined %}
    networks:
      {% for network in container.networks %}
      {{ network }}:
      {% endfor %}
    {% endif %}
    {% if container.ports is defined %}
    {{ format('ports', container.ports) }}
    {%- endif %}
    {% if container.sysctls is defined %}
    {{ format('sysctls', container.sysctls) }}
    {%- endif %}
    {% if container.tty is defined %}
    tty: {{ container.tty }}
    {% endif %}
    {% if container.user is defined %}
    user: {{ container.user }}
    {% endif %}
    {% if container.volumes is defined %}
    volumes:
      {% for volume in container.volumes %}
      - {{ volume | replace('__appdata__', docker_compose_appdata_path) }}
      {% endfor %}
    {%- endif %}
  {% endfor %}
